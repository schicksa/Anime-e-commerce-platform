{"ast":null,"code":"import _asyncToGenerator from \"D:/code/vue/vue_acgn_platform/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n// Introduce Goods-related network request services\nimport { getAllCartoonList } from \"@/request/HomeRequest\"; // Get all anime + search filter - can also be optimized here because every search will be re-requested, you can save the complete data with one data, but you can't do it if you are lazy\n\nexport var getAllCartoonListData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(home) {\n    var res, keyword, newDataList;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getAllCartoonList();\n\n          case 2:\n            res = _context.sent;\n            home.isLoading = false;\n\n            if (res.errMsg) {\n              _context.next = 14;\n              break;\n            }\n\n            home.listData = res.data;\n            keyword = home.$route.params.keyword;\n\n            if (keyword) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 9:\n            newDataList = home.listData.filter(function (item) {\n              return item.title.indexOf(keyword) !== -1;\n            });\n\n            if (!(newDataList.length > 0)) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", home.listData = newDataList);\n\n          case 12:\n            _context.next = 15;\n            break;\n\n          case 14:\n            home.msg = \"Network error, please make sure the JSON-SERVER service is enabled\";\n\n          case 15:\n            home.isShow = false;\n            home.isLoading = false;\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAllCartoonListData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:/code/vue/vue_acgn_platform/src/hooks/HomeHook.js"],"names":["getAllCartoonList","getAllCartoonListData","home","res","isLoading","errMsg","listData","data","keyword","$route","params","newDataList","filter","item","title","indexOf","length","msg","isShow"],"mappings":";;;;AAAA;AACA,SAASA,iBAAT,QAAkC,uBAAlC,C,CAEA;;AACA,OAAO,IAAMC,qBAAqB;AAAA,qEAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACdF,iBAAiB,EADH;;AAAA;AAC1BG,YAAAA,GAD0B;AAEhCD,YAAAA,IAAI,CAACE,SAAL,GAAiB,KAAjB;;AAFgC,gBAG5BD,GAAG,CAACE,MAHwB;AAAA;AAAA;AAAA;;AAI7BH,YAAAA,IAAI,CAACI,QAAL,GAAgBH,GAAG,CAACI,IAApB;AACMC,YAAAA,OALuB,GAKbN,IAAI,CAACO,MAAL,CAAYC,MAAZ,CAAmBF,OALN;;AAAA,gBAMxBA,OANwB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAOvBG,YAAAA,WAPuB,GAOTT,IAAI,CAACI,QAAL,CAAcM,MAAd,CAAqB,UAACC,IAAD,EAAU;AACjD,qBAAOA,IAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBP,OAAnB,MAAgC,CAAC,CAAxC;AACD,aAFmB,CAPS;;AAAA,kBAUzBG,WAAW,CAACK,MAAZ,GAAqB,CAVI;AAAA;AAAA;AAAA;;AAAA,6CAWnBd,IAAI,CAACI,QAAL,GAAgBK,WAXG;;AAAA;AAAA;AAAA;;AAAA;AAc7BT,YAAAA,IAAI,CAACe,GAAL,GAAW,oEAAX;;AAd6B;AAgBhCf,YAAAA,IAAI,CAACgB,MAAL,GAAc,KAAd;AACAhB,YAAAA,IAAI,CAACE,SAAL,GAAiB,KAAjB;;AAjBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBH,qBAAqB;AAAA;AAAA;AAAA,GAA3B","sourcesContent":["// Introduce Goods-related network request services\nimport { getAllCartoonList } from \"@/request/HomeRequest\";\n\n// Get all anime + search filter - can also be optimized here because every search will be re-requested, you can save the complete data with one data, but you can't do it if you are lazy\nexport const getAllCartoonListData = async (home)=>{\n     const res = await getAllCartoonList();\n     home.isLoading = false;\n     if(!res.errMsg){\n        home.listData = res.data;\n        const keyword = home.$route.params.keyword;\n        if (!keyword) return;\n        const newDataList = home.listData.filter((item) => {\n          return item.title.indexOf(keyword) !== -1;\n        });\n        if (newDataList.length > 0) {\n          return (home.listData = newDataList);\n        }\n     }else{\n        home.msg = \"Network error, please make sure the JSON-SERVER service is enabled\"\n     }\n     home.isShow = false;\n     home.isLoading = false;\n}"]},"metadata":{},"sourceType":"module"}