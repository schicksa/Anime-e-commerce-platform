{"ast":null,"code":"import _asyncToGenerator from \"D:/code/vue/vue_acgn_platform/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAllBanner } from \"@/request/BannerRequest\";\nimport Loading from \"@/components/Loading/loading\";\nimport NoData from \"@/components/NoData\";\nexport default {\n  name: \"Banner\",\n  components: {\n    Loading: Loading,\n    NoData: NoData\n  },\n  data: function data() {\n    return {\n      bannerList: []\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getAllBanner(_this);\n\n            case 2:\n              _this.bannerList = _context.sent.data;\n\n              _this.$nextTick(function () {\n                new Swiper(\".swiper\", {\n                  loop: true,\n                  // Loop Mode Options\n                  effect: 'cards',\n                  // Pager if needed\n                  pagination: {\n                    el: \".swiper-pagination\",\n                    clickable: true\n                  },\n                  // Forward and back buttons if needed\n                  navigation: {\n                    nextEl: \".swiper-button-next\",\n                    prevEl: \".swiper-button-prev\"\n                  }\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AAEA;AACAA,gBADA;AAEAC;AAAAC;AAAAC;AAAA,GAFA;AAGAC;AACA;AACAC;AADA;AAGA,GAPA;AAQAC,SARA,qBAQA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACAC,mBADA;;AAAA;AACA,8BADA,iBACAH,IADA;;AAEA;AACA;AACAI,4BADA;AACA;AACAC,iCAFA;AAGA;AACAC;AACAC,4CADA;AAEAC;AAFA,mBAJA;AAQA;AACAC;AACAC,iDADA;AAEAC;AAFA;AATA;AAcA,eAfA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AA1BA","names":["name","components","Loading","NoData","data","bannerList","mounted","getAllBanner","loop","effect","pagination","el","clickable","navigation","nextEl","prevEl"],"sourceRoot":"src/pages/Banner","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"swiper\" v-if=\"bannerList.length > 0\">\n    <div class=\"swiper-wrapper\">\n      <div class=\"swiper-slide\" v-for=\"item in bannerList\" :key=\"item.url\">\n        <img :src=\"item.url\" alt=\"\" />\n      </div>\n    </div>\n    <!-- Pager if needed -->\n    <div class=\"swiper-pagination\"></div>\n\n    <!-- Navigation buttons if required -->\n    <div class=\"swiper-button-prev\"></div>\n    <div class=\"swiper-button-next\"></div>\n  </div>\n  <NoData v-else/>\n</template>\n\n<script>\nimport { getAllBanner } from \"@/request/BannerRequest\";\nimport Loading from \"@/components/Loading/loading\";\nimport NoData from \"@/components/NoData\"\n\nexport default {\n  name: \"Banner\",\n  components: { Loading , NoData},\n  data: () => {\n    return {\n      bannerList: [],\n    };\n  },\n  async mounted() {\n    this.bannerList = (await getAllBanner(this)).data;\n    this.$nextTick(() => {\n      new Swiper(\".swiper\", {\n        loop: true, // Loop Mode Options\n        effect : 'cards',\n        // Pager if needed\n        pagination: {\n          el: \".swiper-pagination\",\n          clickable: true,\n        },\n        // Forward and back buttons if needed\n        navigation: {\n          nextEl: \".swiper-button-next\",\n          prevEl: \".swiper-button-prev\",\n        },\n      });\n    });\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.swiper {\n  --swiper-pagination-color: #eee; /* Both are possible */\n  --swiper-theme-color: #ff6600; /* Set Swiper style */\n  --swiper-navigation-color: #eee; /* Set button color individually */\n  --swiper-navigation-size: 30px; /* set button size */\n  width: 600px;\n  height: 300px;\n  img {\n    width: 100%;\n    height: 100%;\n    cursor: move;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}